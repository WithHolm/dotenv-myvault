name: Test Changed Files

on:
  pull_request_target: 
    types: [opened, synchronize, reopened]

env:
  GO_VERSION: ">=1.23"
  APP_NAME: dotenv-myvault
  GO_PLATFORMS: 'linux-amd64, linux-ppc64le, darwin-amd64, darwin-arm64, windows-amd64'

jobs:
  changed-packages:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.unique-directories.outputs.directories }}
      changed: ${{ steps.changed-files.outputs.any_changed }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v45
        with:
          files: |
            **/*_test.go
            **/*.go
            **/*.mod
          matrix: true
      - name: List all changed files
        run: |
          echo '${{ steps.changed-files.outputs.all_changed_files }}'
      - name: Get unique directories
        id: unique-directories
        run: |
          DIRS=$(echo '${{ steps.changed-files.outputs.all_changed_files }}' | jq -r '.[]' | xargs -I {} dirname {} | sort -u | jq -R -s -c 'split("\n")[:-1]')
          echo "unique directories: $DIRS"
          echo "directories=$DIRS" >> $GITHUB_OUTPUT
      - name: List all changed directories
        run: |
          echo '${{ steps.unique-directories.outputs.directories }}'
  run_package_tests:
    needs: [changed-packages]
    runs-on: ubuntu-latest
    # if: false
    if: ${{ needs.changed-packages.outputs.changed == 'true' }}
    strategy:
      matrix:
        packages: ${{ fromJSON(needs.changed-packages.outputs.matrix) }}
      fail-fast: false
      max-parallel: 4
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Run test ${{ matrix.packages }}
        run: |
          dir=$([ "${{ matrix.packages }}" = "." ] && echo "..." || echo "${{ matrix.packages }}")
          echo "running test for $dir"
          go test -v ./$dir